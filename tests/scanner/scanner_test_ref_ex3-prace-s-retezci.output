EOL
KEYWORD import
STRING_LITERAL ifj25
KEYWORD for
KEYWORD ifj
EOL
KEYWORD class
IDENTIFIER Program
LEFT_BRACE '{'
EOL
KEYWORD static
IDENTIFIER main
LEFT_PAREN '('
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER str1
EOL
IDENTIFIER str1
OP_ASSIGN '='
STRING_LITERAL Toto je text v programu jazyka IFJ25
EOL
KEYWORD var
IDENTIFIER str2
EOL
IDENTIFIER str2
OP_ASSIGN '='
STRING_LITERAL , ktery jeste trochu obohatime
EOL
IDENTIFIER str2
OP_ASSIGN '='
IDENTIFIER str1
OP_ADD '+'
LEFT_PAREN '('
IDENTIFIER str2
OP_MUL '*'
NUM_INT 3
RIGHT_PAREN ')'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER str1
RIGHT_PAREN ')'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER str2
RIGHT_PAREN ')'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Zadejte serazenou posloupnost malych pismen a-h:

RIGHT_PAREN ')'
EOL
KEYWORD var
IDENTIFIER input
EOL
IDENTIFIER input
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER read_str
LEFT_PAREN '('
RIGHT_PAREN ')'
EOL
KEYWORD var
IDENTIFIER all
EOL
IDENTIFIER all
OP_ASSIGN '='
STRING_LITERAL 
EOL
KEYWORD while
LEFT_PAREN '('
IDENTIFIER input
OP_NOT_EQUALS '!='
KEYWORD null
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER strcmpResult
EOL
IDENTIFIER strcmpResult
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER strcmp
LEFT_PAREN '('
IDENTIFIER input
COMMA ','
STRING_LITERAL abcdefgh
RIGHT_PAREN ')'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER strcmpResult
OP_EQUALS '=='
NUM_INT 0
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Spravne zadano! Predchozi pokusy:

RIGHT_PAREN ')'
EOL
IDENTIFIER all
OP_ASSIGN '='
IDENTIFIER all
OP_ADD '+'
STRING_LITERAL 

EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER all
RIGHT_PAREN ')'
EOL
IDENTIFIER input
OP_ASSIGN '='
KEYWORD null
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Spatne zadana posloupnost, zkuste znovu:

RIGHT_PAREN ')'
EOL
IDENTIFIER all
OP_ASSIGN '='
IDENTIFIER all
OP_ADD '+'
IDENTIFIER input
EOL
IDENTIFIER input
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER read_str
LEFT_PAREN '('
RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
END_OF_FILE
