KEYWORD import
STRING_LITERAL ifj25
KEYWORD for
KEYWORD ifj
EOL
KEYWORD class
IDENTIFIER Program
LEFT_BRACE '{'
EOL
EOL
KEYWORD static
IDENTIFIER getAnswer
LEFT_PAREN '('
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD return
NUM_INT 42
EOL
RIGHT_BRACE '}'
EOL
EOL
EOL
KEYWORD static
IDENTIFIER getAnswer
LEFT_PAREN '('
IDENTIFIER arg
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER arg
KEYWORD is
KEYWORD num
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER arg
OP_SUB '-'
NUM_INT 1
OP_GREATER_THAN '>'
NUM_INT 32
OP_MUL '*'
NUM_FLOAT 84.1
OP_DIV '/'
NUM_FLOAT 2.4
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
EOL
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Celkem velke cislo!

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
RIGHT_BRACE '}'
EOL
IDENTIFIER arg
OP_ASSIGN '='
IDENTIFIER arg
OP_MUL '*'
NUM_INT 42
EOL
KEYWORD var
IDENTIFIER ansStr
EOL
IDENTIFIER ansStr
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER str
LEFT_PAREN '('
IDENTIFIER arg
RIGHT_PAREN ')'
EOL
KEYWORD return
STRING_LITERAL Odpoved je 
OP_ADD '+'
IDENTIFIER ansStr
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Neplatny argument

RIGHT_PAREN ')'
EOL
KEYWORD return
KEYWORD null
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
EOL
EOL
KEYWORD static
IDENTIFIER unicorn
LEFT_BRACE '{'
EOL
EOL
EOL
KEYWORD if
LEFT_PAREN '('
GLOBAL_VAR a
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD return
GLOBAL_VAR a
OP_ADD '+'
NUM_INT 10
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
KEYWORD return
KEYWORD null
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
EOL
EOL
KEYWORD static
IDENTIFIER unicorn
OP_ASSIGN '='
LEFT_PAREN '('
IDENTIFIER val
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Jsem jednorozci setter, ziskal jsem 
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER val
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
GLOBAL_VAR a
OP_ASSIGN '='
IDENTIFIER val
EOL
RIGHT_BRACE '}'
EOL
EOL
EOL
KEYWORD static
IDENTIFIER unicorn
LEFT_PAREN '('
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Jsem ve funkci unicorn, ne v getteru

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
EOL
EOL
KEYWORD static
IDENTIFIER main
LEFT_PAREN '('
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER unicorn
RIGHT_PAREN ')'
EOL
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
EOL
IDENTIFIER unicorn
OP_ASSIGN '='
NUM_INT 5
EOL
EOL
EOL
KEYWORD var
IDENTIFIER myValue
EOL
EOL
IDENTIFIER myValue
OP_ASSIGN '='
IDENTIFIER unicorn
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER myValue
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
EOL
IDENTIFIER myValue
OP_ASSIGN '='
IDENTIFIER unicorn
LEFT_PAREN '('
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER myValue
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Napis cislo:

RIGHT_PAREN ')'
EOL
KEYWORD var
IDENTIFIER valueFromUser
EOL
IDENTIFIER valueFromUser
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER read_num
LEFT_PAREN '('
RIGHT_PAREN ')'
EOL
IDENTIFIER myValue
OP_ASSIGN '='
IDENTIFIER getAnswer
LEFT_PAREN '('
IDENTIFIER valueFromUser
RIGHT_PAREN ')'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER myValue
OP_EQUALS '=='
KEYWORD null
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL ODPOVED NENI!

RIGHT_PAREN ')'
EOL
KEYWORD return
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER myValue
KEYWORD is
KEYWORD Null
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
EOL
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER myValue
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
EOL
KEYWORD while
LEFT_PAREN '('
IDENTIFIER valueFromUser
OP_GREATER_THAN '>'
NUM_INT 0
OP_SUB '-'
NUM_INT 2
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Jedeme dolu! 
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER valueFromUser
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL  -> 
RIGHT_PAREN ')'
EOL
IDENTIFIER valueFromUser
OP_ASSIGN '='
IDENTIFIER valueFromUser
OP_SUB '-'
NUM_INT 1
EOL
EOL
KEYWORD var
IDENTIFIER valStr
EOL
IDENTIFIER valStr
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER str
LEFT_PAREN '('
IDENTIFIER valueFromUser
RIGHT_PAREN ')'
EOL
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER valStr
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
EOL
EOL
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER x
EOL
IDENTIFIER x
OP_ASSIGN '='
NUM_INT 1
EOL
LEFT_BRACE '{'
EOL
EOL
EOL
EOL
EOL
KEYWORD var
IDENTIFIER x
EOL
IDENTIFIER x
OP_ASSIGN '='
STRING_LITERAL cervena panda + 
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL (
RIGHT_PAREN ')'
EOL
KEYWORD if
LEFT_PAREN '('
NUM_INT 1
OP_EQUALS '=='
NUM_INT 1
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER y
EOL
IDENTIFIER y
OP_ASSIGN '='
IDENTIFIER x
OP_MUL '*'
NUM_INT 3
EOL
EOL
KEYWORD var
IDENTIFIER x
EOL
IDENTIFIER x
OP_ASSIGN '='
IDENTIFIER y
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER x
RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
RIGHT_BRACE '}'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL konec) 
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER x
RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER x
RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
END_OF_FILE
