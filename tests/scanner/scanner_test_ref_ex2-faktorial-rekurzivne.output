EOL
KEYWORD import
STRING_LITERAL ifj25
KEYWORD for
KEYWORD ifj
EOL
KEYWORD class
IDENTIFIER Program
LEFT_BRACE '{'
EOL
EOL
KEYWORD static
IDENTIFIER main
LEFT_PAREN '('
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
EOL
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Zadejte cislo pro vypocet faktorialu: 
RIGHT_PAREN ')'
EOL
KEYWORD var
IDENTIFIER inp
EOL
IDENTIFIER inp
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER read_num
LEFT_PAREN '('
RIGHT_PAREN ')'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER inp
OP_NOT_EQUALS '!='
KEYWORD null
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER inp
OP_LESS_THAN '<'
NUM_INT 0
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Faktorial nelze spocitat!

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
EOL
KEYWORD var
IDENTIFIER inpFloored
EOL
IDENTIFIER inpFloored
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER floor
LEFT_PAREN '('
IDENTIFIER inp
RIGHT_PAREN ')'
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER inp
OP_EQUALS '=='
IDENTIFIER inpFloored
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER vysl
EOL
IDENTIFIER vysl
OP_ASSIGN '='
IDENTIFIER factorial
LEFT_PAREN '('
IDENTIFIER inp
RIGHT_PAREN ')'
EOL
IDENTIFIER vysl
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER str
LEFT_PAREN '('
IDENTIFIER vysl
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Vysledek: 
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
IDENTIFIER vysl
RIGHT_PAREN ')'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL 

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Cislo neni cele!

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
GLOBAL_VAR d
OP_ASSIGN '='
KEYWORD ifj
DOT
IDENTIFIER write
LEFT_PAREN '('
STRING_LITERAL Chyba pri nacitani celeho cisla!

RIGHT_PAREN ')'
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
EOL
KEYWORD static
IDENTIFIER factorial
LEFT_PAREN '('
IDENTIFIER n
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER result
EOL
KEYWORD if
LEFT_PAREN '('
IDENTIFIER n
OP_LESS_THAN '<'
NUM_INT 2
RIGHT_PAREN ')'
LEFT_BRACE '{'
EOL
IDENTIFIER result
OP_ASSIGN '='
NUM_INT 1
EOL
RIGHT_BRACE '}'
KEYWORD else
LEFT_BRACE '{'
EOL
KEYWORD var
IDENTIFIER decremented_n
EOL
IDENTIFIER decremented_n
OP_ASSIGN '='
IDENTIFIER n
OP_SUB '-'
NUM_INT 1
EOL
IDENTIFIER result
OP_ASSIGN '='
IDENTIFIER factorial
LEFT_PAREN '('
IDENTIFIER decremented_n
RIGHT_PAREN ')'
EOL
IDENTIFIER result
OP_ASSIGN '='
IDENTIFIER n
OP_MUL '*'
IDENTIFIER result
EOL
RIGHT_BRACE '}'
EOL
KEYWORD return
IDENTIFIER result
EOL
RIGHT_BRACE '}'
EOL
RIGHT_BRACE '}'
EOL
END_OF_FILE
